{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\react\\\\projects\\\\test2-react-toweriqua\\\\src\\\\components\\\\Users\\\\Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport s from './Users.module.css';\nimport User from \"./User/User\";\nimport OneUserWindow from \"./OneUserWindow/OneUserWindow\";\nimport { getUsers } from \"../redux/users-reducer\";\nimport { connect } from \"react-redux\";\nimport Preloader from \"../common/Preloader\";\n\nconst Users = props => {\n  _s();\n\n  // debugger\n  let users = props.users; //let currentPage = props.currentPage;\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  if (!users) {\n    users = props.getUsers();\n  }\n\n  let totalCount = users.length + 1;\n  let pageCount = Math.ceil(totalCount / 5); // pageSize = 5\n\n  let pages = [];\n\n  for (let page = 1; page < pageCount + 1; page++) {\n    pages.push(page);\n  } //debugger\n\n\n  let usersOnCurrentPage = 1;\n\n  if (users.length > 0) {\n    alert(users[(currentPage - 1) * 5]);\n    alert(users.indexOf(users[(currentPage - 1) * 5]));\n    alert(users.indexOf(currentPage * 5 + 4));\n    usersOnCurrentPage = users.slice(users.indexOf((currentPage - 1) * 5), users.indexOf(currentPage * 5 + 4));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.users,\n      children: [/*#__PURE__*/_jsxDEV(OneUserWindow, {\n        users: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.paginator,\n        children: [\" \", pages.map(page => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: page === currentPage ? s.selected : '',\n            onClick: e => {\n              setCurrentPage(page);\n            },\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 32\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.usersList,\n        children: [\" \", usersOnCurrentPage.map(user => /*#__PURE__*/_jsxDEV(User, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 55\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.usersList,\n        children: \" User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Users, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n\n_c = Users;\n\nconst mapStateToProps = state => ({\n  users: state.usersPage.users,\n  getUsers: state.usersPage.getUsers // currentPage: state.usersPage.currentPage\n\n});\n\nexport default connect(mapStateToProps, {\n  getUsers\n})(Users);\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["G:/react/projects/test2-react-toweriqua/src/components/Users/Users.jsx"],"names":["React","useEffect","useState","s","User","OneUserWindow","getUsers","connect","Preloader","Users","props","users","currentPage","setCurrentPage","totalCount","length","pageCount","Math","ceil","pages","page","push","usersOnCurrentPage","alert","indexOf","slice","paginator","map","selected","e","usersList","user","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport s from './Users.module.css'\r\nimport User from \"./User/User\";\r\nimport OneUserWindow from \"./OneUserWindow/OneUserWindow\";\r\nimport {getUsers} from \"../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../common/Preloader\";\r\n\r\nconst Users = (props) => {\r\n    // debugger\r\n    let users = props.users;\r\n    //let currentPage = props.currentPage;\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    if (!users) {\r\n        users = props.getUsers();\r\n    }\r\n\r\n    let totalCount = users.length + 1;\r\n    let pageCount = Math.ceil(totalCount / 5); // pageSize = 5\r\n    let pages = [];\r\n    for (let page = 1; page < pageCount + 1; page++) {\r\n        pages.push(page)\r\n    }\r\n\r\n    //debugger\r\n    let usersOnCurrentPage = 1;\r\n\r\n    if (users.length > 0) {\r\n        alert(users[(currentPage - 1) * 5]);\r\n        alert(users.indexOf(users[(currentPage - 1) * 5]));\r\n        alert(users.indexOf((currentPage * 5 + 4)));\r\n        usersOnCurrentPage = users.slice(users.indexOf((currentPage - 1) * 5), users.indexOf((currentPage * 5 + 4)));\r\n\r\n        return (\r\n            <div className={s.users}>\r\n                <OneUserWindow users={users}/>\r\n                <div className={s.paginator}> {\r\n                    pages.map( (page) => {\r\n                        return <button className={page === currentPage ? s.selected : ''}\r\n                                        onClick={(e) => {setCurrentPage(page)}}\r\n                                >{page}</button>\r\n                    })\r\n                } </div>\r\n                <div className={s.usersList}> {\r\n                    usersOnCurrentPage.map((user) =>  <User user={user} />)\r\n                } </div>\r\n                <div className={s.usersList}> User </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    return <Preloader/>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.usersPage.users,\r\n    getUsers: state.usersPage.getUsers,\r\n    // currentPage: state.usersPage.currentPage\r\n});\r\n\r\nexport default connect(mapStateToProps, {getUsers})(Users)"]},"metadata":{},"sourceType":"module"}