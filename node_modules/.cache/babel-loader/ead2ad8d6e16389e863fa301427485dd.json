{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\react\\\\projects\\\\test2-react-toweriqua\\\\src\\\\components\\\\Users\\\\Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport s from './Users.module.css';\nimport User from \"./User/User\";\nimport OneUserWindow from \"./OneUserWindow/OneUserWindow\";\nimport { getUsers } from \"../redux/users-reducer\";\nimport { connect } from \"react-redux\";\n\nconst Users = props => {\n  _s();\n\n  debugger;\n  let users = props.users; //let currentPage = props.currentPage;\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  if (!users) {\n    users = props.getUsers();\n  }\n\n  let totalCount = users.length + 1;\n  let pageCount = Math.ceil(totalCount / 5); // pageSize = 5\n\n  let pages = [];\n  let usersOnCurrentPage = users.slice(currentPage - 1, currentPage + 4);\n\n  for (let page = 1; page < pageCount + 1; page++) {\n    pages.push(page);\n  }\n  /*    if (users === 'error') {\r\n          return 'Server connection error'\r\n      }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.users,\n    children: [/*#__PURE__*/_jsxDEV(OneUserWindow, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.paginator,\n      children: [\" \", pages.map(page => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", page === currentPage ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: s.activePageButton,\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: s.pageButton,\n            onClick: e => {\n              setCurrentPage(page);\n            },\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 31\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.usersList,\n      children: users.map(user => {\n        return /*#__PURE__*/_jsxDEV(User, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n\n_c = Users;\n\nconst mapStateToProps = state => ({\n  users: state.usersPage.users,\n  getUsers: state.usersPage.getUsers // currentPage: state.usersPage.currentPage\n\n});\n\nexport default connect(mapStateToProps, {\n  getUsers\n})(Users);\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["G:/react/projects/test2-react-toweriqua/src/components/Users/Users.jsx"],"names":["React","useEffect","useState","s","User","OneUserWindow","getUsers","connect","Users","props","users","currentPage","setCurrentPage","totalCount","length","pageCount","Math","ceil","pages","usersOnCurrentPage","slice","page","push","paginator","map","activePageButton","pageButton","e","usersList","user","mapStateToProps","state","usersPage"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB;AACA,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB,CAFqB,CAGrB;;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;;AAEA,MAAI,CAACQ,KAAL,EAAY;AACRA,IAAAA,KAAK,GAAGD,KAAK,CAACH,QAAN,EAAR;AACH;;AAED,MAAIO,UAAU,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAhC;AACA,MAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,UAAU,GAAG,CAAvB,CAAhB,CAXqB,CAWsB;;AAC3C,MAAIK,KAAK,GAAG,EAAZ;AACA,MAAIC,kBAAkB,GAAGT,KAAK,CAACU,KAAN,CAAYT,WAAW,GAAG,CAA1B,EAA6BA,WAAW,GAAG,CAA3C,CAAzB;;AAEA,OAAK,IAAIU,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGN,SAAS,GAAG,CAAtC,EAAyCM,IAAI,EAA7C,EAAiD;AAC7CH,IAAAA,KAAK,CAACI,IAAN,CAAWD,IAAX;AACH;AAED;AACJ;AACA;;;AAEI,sBACI;AAAK,IAAA,SAAS,EAAElB,CAAC,CAACO,KAAlB;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEP,CAAC,CAACoB,SAAlB;AAAA,sBACIL,KAAK,CAACM,GAAN,CAAWH,IAAD,IAAU;AAChB,4BACI;AAAA,0BAAQA,IAAI,KAAKV,WAAV,gBACH;AAAQ,YAAA,SAAS,EAAER,CAAC,CAACsB,gBAArB;AAAA,sBAAwCJ;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADG,gBAED;AAAQ,YAAA,SAAS,EAAElB,CAAC,CAACuB,UAArB;AACQ,YAAA,OAAO,EAAGC,CAAD,IAAO;AACZf,cAAAA,cAAc,CAACS,IAAD,CAAd;AACH,aAHT;AAAA,sBAGYA;AAHZ;AAAA;AAAA;AAAA;AAAA,kBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVD,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAeI;AAAK,MAAA,SAAS,EAAElB,CAAC,CAACyB,SAAlB;AAAA,gBACIlB,KAAK,CAACc,GAAN,CAAWK,IAAD,IAAU;AAChB,4BAAO,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAhDD;;GAAMrB,K;;KAAAA,K;;AAkDN,MAAMsB,eAAe,GAAIC,KAAD,KAAY;AAChCrB,EAAAA,KAAK,EAAEqB,KAAK,CAACC,SAAN,CAAgBtB,KADS;AAEhCJ,EAAAA,QAAQ,EAAEyB,KAAK,CAACC,SAAN,CAAgB1B,QAFM,CAGhC;;AAHgC,CAAZ,CAAxB;;AAMA,eAAeC,OAAO,CAACuB,eAAD,EAAkB;AAACxB,EAAAA;AAAD,CAAlB,CAAP,CAAqCE,KAArC,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport s from './Users.module.css'\r\nimport User from \"./User/User\";\r\nimport OneUserWindow from \"./OneUserWindow/OneUserWindow\";\r\nimport {getUsers} from \"../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Users = (props) => {\r\n    debugger\r\n    let users = props.users;\r\n    //let currentPage = props.currentPage;\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    if (!users) {\r\n        users = props.getUsers();\r\n    }\r\n\r\n    let totalCount = users.length + 1;\r\n    let pageCount = Math.ceil(totalCount / 5); // pageSize = 5\r\n    let pages = [];\r\n    let usersOnCurrentPage = users.slice(currentPage - 1, currentPage + 4);\r\n\r\n    for (let page = 1; page < pageCount + 1; page++) {\r\n        pages.push(page)\r\n    }\r\n\r\n    /*    if (users === 'error') {\r\n            return 'Server connection error'\r\n        }*/\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <OneUserWindow users={users}/>\r\n            <div className={s.paginator}> {\r\n                pages.map((page) => {\r\n                    return (\r\n                        <div> {(page === currentPage) ?\r\n                            <button className={s.activePageButton}>{page}</button>\r\n                            : <button className={s.pageButton}\r\n                                      onClick={(e) => {\r\n                                          setCurrentPage(page)\r\n                                      }}>{page}</button>\r\n                        } </div>\r\n                    )\r\n                })\r\n            } </div>\r\n            <div className={s.usersList}>{\r\n                users.map((user) => {\r\n                    return <User user={user}/>\r\n                })\r\n            }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.usersPage.users,\r\n    getUsers: state.usersPage.getUsers,\r\n    // currentPage: state.usersPage.currentPage\r\n});\r\n\r\nexport default connect(mapStateToProps, {getUsers})(Users)"]},"metadata":{},"sourceType":"module"}