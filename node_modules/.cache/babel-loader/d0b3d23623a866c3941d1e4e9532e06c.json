{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\react\\\\projects\\\\test2-react-toweriqua\\\\src\\\\components\\\\Users\\\\Users.jsx\";\nimport React from 'react';\nimport s from './Users.module.css';\nimport User from \"./User/User\";\nimport OneUserWindow from \"./OneUserWindow/OneUserWindow\";\nimport { getUsers } from \"../redux/users-reducer\";\nimport { connect } from \"react-redux\";\n\nconst Users = props => {\n  debugger;\n  let users = props.users; // let currentPage = props.currentPage;\n\n  if (!users) {\n    users = props.getUsers();\n  }\n\n  let totalCount = users.length + 1;\n  let pageCount = Math.ceil(totalCount / 5);\n  let pages = [];\n\n  for (let page = 1; page < pageCount + 1; page++) {\n    pages.push(page);\n  }\n  /*    if (users === 'error') {\r\n          return 'Server connection error'\r\n      }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.users,\n    children: [/*#__PURE__*/_jsxDEV(OneUserWindow, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(User, {\n      users: users,\n      currentPage: props.currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Users;\n\nconst mapStateToProps = state => ({\n  users: state.usersPage.users,\n  getUsers: state.usersPage.getUsers //currentPage: state.usersPage.currentPage\n\n});\n\nexport default connect(mapStateToProps, {\n  getUsers\n})(Users);\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["G:/react/projects/test2-react-toweriqua/src/components/Users/Users.jsx"],"names":["React","s","User","OneUserWindow","getUsers","connect","Users","props","users","totalCount","length","pageCount","Math","ceil","pages","page","push","currentPage","mapStateToProps","state","usersPage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB;AACA,MAAIC,KAAK,GAAGD,KAAK,CAACC,KAAlB,CAFqB,CAGtB;;AAEC,MAAI,CAACA,KAAL,EAAY;AACRA,IAAAA,KAAK,GAAGD,KAAK,CAACH,QAAN,EAAR;AACH;;AAED,MAAIK,UAAU,GAAGD,KAAK,CAACE,MAAN,GAAc,CAA/B;AACA,MAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,UAAU,GAAC,CAArB,CAAhB;AACA,MAAIK,KAAK,GAAG,EAAZ;;AAEA,OAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGJ,SAAS,GAAC,CAApC,EAAuCI,IAAI,EAA3C,EAA+C;AAC3CD,IAAAA,KAAK,CAACE,IAAN,CAAWD,IAAX;AACH;AAEL;AACA;AACA;;;AAEI,sBACI;AAAK,IAAA,SAAS,EAAEd,CAAC,CAACO,KAAlB;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,KAAb;AAAoB,MAAA,WAAW,EAAED,KAAK,CAACU;AAAvC;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAlCD;;KAAMX,K;;AAoCN,MAAMY,eAAe,GAAIC,KAAD,KAAY;AAChCX,EAAAA,KAAK,EAAEW,KAAK,CAACC,SAAN,CAAgBZ,KADS;AAEhCJ,EAAAA,QAAQ,EAAEe,KAAK,CAACC,SAAN,CAAgBhB,QAFM,CAGhC;;AAHgC,CAAZ,CAAxB;;AAMA,eAAeC,OAAO,CAAEa,eAAF,EAAmB;AAACd,EAAAA;AAAD,CAAnB,CAAP,CAAuCE,KAAvC,CAAf","sourcesContent":["import React from 'react';\r\nimport s from './Users.module.css'\r\nimport User from \"./User/User\";\r\nimport OneUserWindow from \"./OneUserWindow/OneUserWindow\";\r\nimport {getUsers} from \"../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Users = (props) => {\r\n    debugger\r\n    let users = props.users;\r\n   // let currentPage = props.currentPage;\r\n\r\n    if (!users) {\r\n        users = props.getUsers();\r\n    }\r\n\r\n    let totalCount = users.length +1;\r\n    let pageCount = Math.ceil(totalCount/5);\r\n    let pages = [];\r\n    \r\n    for (let page = 1; page < pageCount+1; page++) {\r\n        pages.push(page)\r\n    }\r\n\r\n/*    if (users === 'error') {\r\n        return 'Server connection error'\r\n    }*/\r\n\r\n    return (\r\n        <div className={s.users}>\r\n            <OneUserWindow users={users} />\r\n            <div>\r\n\r\n\r\n                }\r\n            </div>\r\n\r\n\r\n            <User users={users} currentPage={props.currentPage} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.usersPage.users,\r\n    getUsers: state.usersPage.getUsers,\r\n    //currentPage: state.usersPage.currentPage\r\n});\r\n\r\nexport default connect( mapStateToProps, {getUsers} )(Users)"]},"metadata":{},"sourceType":"module"}